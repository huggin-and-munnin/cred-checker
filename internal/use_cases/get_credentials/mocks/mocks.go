// Code generated by MockGen. DO NOT EDIT.
// Source: internal/use_cases/get_credentials/use_case.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/hugin-and-munin/cred-checker/internal/model"
)

// MockCredentialChecker is a mock of CredentialChecker interface.
type MockCredentialChecker struct {
	ctrl     *gomock.Controller
	recorder *MockCredentialCheckerMockRecorder
}

// MockCredentialCheckerMockRecorder is the mock recorder for MockCredentialChecker.
type MockCredentialCheckerMockRecorder struct {
	mock *MockCredentialChecker
}

// NewMockCredentialChecker creates a new mock instance.
func NewMockCredentialChecker(ctrl *gomock.Controller) *MockCredentialChecker {
	mock := &MockCredentialChecker{ctrl: ctrl}
	mock.recorder = &MockCredentialCheckerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCredentialChecker) EXPECT() *MockCredentialCheckerMockRecorder {
	return m.recorder
}

// SearchCompany mocks base method.
func (m *MockCredentialChecker) SearchCompany(ctx context.Context, inn string) (*model.Company, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SearchCompany", ctx, inn)
	ret0, _ := ret[0].(*model.Company)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SearchCompany indicates an expected call of SearchCompany.
func (mr *MockCredentialCheckerMockRecorder) SearchCompany(ctx, inn interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SearchCompany", reflect.TypeOf((*MockCredentialChecker)(nil).SearchCompany), ctx, inn)
}
