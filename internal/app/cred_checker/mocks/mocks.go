// Code generated by MockGen. DO NOT EDIT.
// Source: internal/app/cred_checker/service.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCheckCredentialsUseCase is a mock of CheckCredentialsUseCase interface.
type MockCheckCredentialsUseCase struct {
	ctrl     *gomock.Controller
	recorder *MockCheckCredentialsUseCaseMockRecorder
}

// MockCheckCredentialsUseCaseMockRecorder is the mock recorder for MockCheckCredentialsUseCase.
type MockCheckCredentialsUseCaseMockRecorder struct {
	mock *MockCheckCredentialsUseCase
}

// NewMockCheckCredentialsUseCase creates a new mock instance.
func NewMockCheckCredentialsUseCase(ctrl *gomock.Controller) *MockCheckCredentialsUseCase {
	mock := &MockCheckCredentialsUseCase{ctrl: ctrl}
	mock.recorder = &MockCheckCredentialsUseCaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCheckCredentialsUseCase) EXPECT() *MockCheckCredentialsUseCaseMockRecorder {
	return m.recorder
}

// CheckCredentials mocks base method.
func (m *MockCheckCredentialsUseCase) CheckCredentials(ctx context.Context, inn string) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckCredentials", ctx, inn)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CheckCredentials indicates an expected call of CheckCredentials.
func (mr *MockCheckCredentialsUseCaseMockRecorder) CheckCredentials(ctx, inn interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckCredentials", reflect.TypeOf((*MockCheckCredentialsUseCase)(nil).CheckCredentials), ctx, inn)
}
